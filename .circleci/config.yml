version: 2.1

commands:
  destroy_infrastructure:
    steps:
      - run:
          name: Delete Stack
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name alx-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name alx-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  query_ips:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: mkdir temp
      - run: echo [ubuntu] >> temp/inventory.txt
      - run: cat temp/inventory.txt
      - run:
          name: Query Ip Addresses
          command: |
            aws ec2 describe-instances --query Reservations[*].Instances[*].PublicIpAddress --output text >> temp/inventory.txt
      - run: cat temp/inventory.txt
      - persist_to_workspace:
          root: temp
          paths:
            - output.txt
      - destroy_infrastructure
  smoke_test:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - run: apk install curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
  configure_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install Tar
          command: apt-get install -y tar
      - attach_workspace:
          at: temp
      - run: cat temp/inventory.txt
      - add_ssh_keys:
          fingerprints: 
            - 42:37:d3:5b:62:1e:a7:5c:0b:4b:92:d7:5f:7d:0b:de
            - 80:3c:69:c1:d7:88:81:8f:34:6f:c7:a9:91:43:37:89
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i temp/output.txt main.yml -vvvv
      - destroy_infrastructure
workflows:
  default:
    jobs:
      - create_infrastructure
      - query_ips:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires: 
            - query_ips
      - smoke_test
          # requires: 
          #   - query_ips